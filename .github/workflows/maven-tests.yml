name: Ejecutar pruebas MercadoLibre Automation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar el repositorio
      - name: Checkout código
        uses: actions/checkout@v4

      # 2. Configurar Java 17
      - name: Configurar Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # 3. Instalar Google Chrome y Chromedriver
      - name: Instalar Google Chrome y ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip xvfb
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          CHROMEDRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_${CHROME_VERSION%%.*}")
          wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          rm -rf chromedriver-linux64.zip chromedriver-linux64

      # 4. Dar permisos de ejecución a mvnw (si existe)
      - name: Permisos para mvnw
        run: chmod +x mvnw || true

      # 5. Ejecutar pruebas con Maven
      - name: Ejecutar pruebas Maven
        run: mvn clean verify -Dwebdriver.chrome.driver=/usr/local/bin/chromedriver

      # 6. Subir reportes Serenity como artefacto
      - name: Subir reportes Serenity
        uses: actions/upload-artifact@v4
        with:
          name: serenity-report
          path: target/site/serenity
